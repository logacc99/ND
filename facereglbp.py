# -*- coding: utf-8 -*-
"""FaceRegLBP.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1tFmd6J2QGRQJL0EtZVzjWIS1m5B9qbM1
"""

import cv2
import numpy as np
from matplotlib import pyplot as plt
import glob
import pandas as pd
from sklearn.model_selection import train_test_split

def pixel(img, center, x, y):
    bin_value = 0
    try:
        if img[x][y] >= center:
            bin_value = 1
    except:
        pass
    return bin_value

def LBP_calc(img, x, y):  
    center = img[x][y]
    dx = [-1,0,1,1,1,0,-1,-1]
    dy = [1,1,1,0,-1,-1,-1,0]
    powFactor = [1, 2, 4, 8, 16, 32, 64, 128]
    '''
     64 , 128 ,   1
     32 ,   0 ,   2
     16 ,   8 ,   4    
    '''  
    lbp = 0
    for i in range(8):
        lbp = lbp + pixel(img, center, x+dx[i], y+dy[i])*powFactor[i]
    return lbp

def LBP_hist(img):
    height, width, channel = img.shape
    img_gray = cv2.cvtColor(img, cv2.COLOR_BGR2GRAY)
    img_lbp = np.zeros((height, width, 3), np.uint8)
    for i in range(0, height):
        for j in range(0, width):
             img_lbp[i, j] = LBP_calc(img_gray, i, j)
    hist_lbp = cv2.calcHist([img_lbp], [0], None, [256], [0, 256])
    
    plt.imshow(img_gray, cmap = plt.get_cmap('gray'))
    plt.show()
    
    
    plt.imshow(img_lbp, cmap = plt.get_cmap('gray'))
    plt.show()
    return hist_lbp

images = []
nFaces = 50

for i in range(nFaces):
    path = 'data_train/'+str(i+1)+'/*.bmp'
    faces = [cv2.imread(file) for file in glob.glob(path)]
    for k in range(len(faces)):
        images.append(faces[k])

ID_ar = []
for i in range(nFaces):
    for j in range(20):
        ID_ar.append(i)

print(len(images))

X_train, X_test, y_train, y_test = train_test_split(images, ID_ar, test_size = 0.3, random_state = 42)
hist_train = np.zeros((len(X_train),)).astype('object')
for i in range(len(X_train)):
    hist_train[i] = LBP_hist(X_train[i])
    print(f'Image {i}: OK')

y_pred = [-1 for i in range(len(y_test))]
for iTest in range(len(y_test)):
    imgTest = X_test[iTest]
    histTest = LBP_hist(imgTest)
    hist_diff = np.zeros((len(hist_train),))
    for i in range(len(hist_train)):
        hist_diff[i] = cv2.compareHist(hist_train[i], histTest, cv2.HISTCMP_CHISQR)
    IDpred = np.argmin(hist_diff)
    y_pred[iTest] = y_train[IDpred]

from sklearn.metrics import accuracy_score
print('Score: ', accuracy_score(y_test, y_pred))

